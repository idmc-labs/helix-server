version: '3.4'


x-server: &base_server_setup
  environment: &base_server_environment
    HELIX_ENVIRONMENT: development
    DJANGO_DEBUG: ${DJANGO_DEBUG:-True}
    ENABLE_DEBUG_TOOLBAR: ${ENABLE_DEBUG_TOOLBAR:-False}  # Used for DEBUG TOOLBAR, TODO: REMOVE
    DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY:-STATIC-INSECURE-KEY-PLEASE-DONT-USE-IN-PRODUCTION}
    DJANGO_ALLOWED_HOST: ${DJANGO_ALLOWED_HOST:-localhost,host.docker.internal}
    FRONTEND_BASE_URL: ${FRONTEND_BASE_URL:-http://localhost:3080}
    # Database (Default from db container)
    POSTGRES_HOST: ${POSTGRES_HOST:-db}
    POSTGRES_DB: ${POSTGRES_DB:-postgres}
    POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    POSTGRES_PORT: ${POSTGRES_PORT:-5432}
    POSTGRES_USER: ${POSTGRES_USER:-postgres}
    # REDIS (Default from redis container)
    DJANGO_CACHE_REDIS_URL: ${DJANGO_CACHE_REDIS_URL:-redis://redis:6379/1}
    DJANGO_EXTERNAL_API_CACHE_REDIS_URL: ${DJANGO_EXTERNAL_API_CACHE_REDIS_URL:-redis://redis:6379/3}
    CELERY_BROKER_URL: ${CELERY_BROKER_URL:-redis://redis:6379/0}
    CELERY_RESULT_BACKEND_URL: ${CELERY_RESULT_BACKEND_URL:-redis://redis:6379/2}
    # Cookie config
    SESSION_COOKIE_DOMAIN: ${SESSION_COOKIE_DOMAIN:-localhost}
    CSRF_COOKIE_DOMAIN: ${CSRF_COOKIE_DOMAIN:-localhost}
    CORS_ORIGIN_REGEX_WHITELIST: ${CORS_ORIGIN_REGEX_WHITELIST:-^http://localhost:[\d\-]+$$|^http://localhost$$}
    # MISC
    HCAPTCHA_SECRET: ${HCAPTCHA_SECRET:-0x0000000000000000000000000000000000000000}
  volumes:
    - ./:/code
    - ipython_data_local:/root/.ipython/profile_default   # persist ipython data, including ipython history
  # restart: 'on-failure'
  depends_on:
    - db
    - redis


services:
  db:
    image: postgres:13
    environment:
      POSTGRES_PASSWORD: postgres
    volumes:
      - helix-db-data:/var/lib/postgresql/data
    ports:
      - '127.0.0.1:6050:5432'

  redis:
    image: redis:latest
    volumes:
      - helix-redis-data:/data

  server:
    <<: *base_server_setup
    image: helix/helix-server:latest
    build:
      context: ./
      dockerfile: api.Dockerfile
    command: python manage.py runserver 0.0.0.0:9000
    ports:
      - '9000:9000'

  celery:
    <<: *base_server_setup
    image: helix/helix-worker:latest
    build:
      context: ./
      dockerfile: worker.Dockerfile
    command: ./deploy/scripts/run_tasks.sh

volumes:
  helix-db-data:
  helix-redis-data:
  ipython_data_local:
